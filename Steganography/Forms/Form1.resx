<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PreviewPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>