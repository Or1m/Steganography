<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PreviewPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +dSn/h9tNUy+LxZ36gAAAABJRU5ErkJggg==
</value>
  </data>
</root>